DELETE FROM CARRIED_SUBJECTS;
DELETE FROM PARTIAL_GRADES;
DELETE FROM GRADES;
DROP SEQUENCE CARRIED_SUBJECTS_SEQ;
CREATE SEQUENCE CARRIED_SUBJECTS_SEQ START WITH 1 INCREMENT BY 1;
DROP SEQUENCE GRADES_SEQ;
CREATE SEQUENCE GRADES_SEQ START WITH 1 INCREMENT BY 1;
DROP SEQUENCE PARTIAL_GRADES_SEQ;
CREATE SEQUENCE PARTIAL_GRADES_SEQ START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE PROCEDURE INSERTDEPENDENCIES
IS
CURSOR cSEMESTERS IS SELECT ID_SEMESTER ,START_DATE ,END_DATE ,ID_SCHOOL_YEAR  FROM SEMESTERS;
CURSOR cSTUDENTS IS SELECT STUDENTS.ID_STUDENT FROM STUDENTS;
CURSOR cSC IS SELECT ID_STUDENTS_CLASSES, ID_STUDENT, ID_CLASS FROM STUDENTS_CLASSES;
CURSOR cCLASSES IS SELECT CLASSES.ID_CLASS ,CLASSES.NAME ,ID_SEMESTER  FROM CLASSES;
tmpTeacherId NUMBER;
tmpDegNum NUMBER;
tmpSubjectId NUMBER;
tmpNextSeq NUMBER;
tmpNumSub NUMBER;
tmpCSNextSeq NUMBER;
BEGIN
  FOR xcs IN cSEMESTERS LOOP
    FOR xcl IN cCLASSES LOOP
      IF xcs.ID_SEMESTER = xcl.ID_SEMESTER THEN
        SELECT ROUND(DBMS_RANDOM.VALUE(1,15)) INTO tmpNumSub FROM DUAL;
        FOR s IN 1..tmpNumSub LOOP
          SELECT ROUND(DBMS_RANDOM.VALUE(1,50)) INTO tmpTeacherId FROM DUAL;
          tmpCSNextSeq := CARRIED_SUBJECTS_SEQ.NEXTVAL; 
          INSERT INTO CARRIED_SUBJECTS(ID_CARRIED_SUBJECT, ID_TEACHER,ID_CLASS,ID_SEMESTER, ID_SUBJECT) VALUES(tmpCSNextSeq, tmpTeacherId, xcl.ID_CLASS, xcs.ID_SEMESTER, s);

          FOR xst IN cSTUDENTS LOOP
            FOR xcs IN cSC LOOP
             IF xcl.ID_CLASS = xcs.ID_CLASS AND xst.ID_STUDENT = xcs.ID_STUDENT THEN
              tmpNextSeq := GRADES_SEQ.NEXTVAL;
              INSERT INTO GRADES(ID_GRADE, ID_STUDENT, ID_CARRIED_SUBJECT) VALUES(tmpNextSeq, xst.ID_STUDENT, tmpCSNextSeq);
              SELECT ROUND(DBMS_RANDOM.VALUE(1,15)) INTO tmpDegNum FROM DUAL;
              FOR i IN 1..tmpDegNum LOOP
                INSERT INTO PARTIAL_GRADES VALUES(PARTIAL_GRADES_SEQ.NEXTVAL, to_char(ROUND(DBMS_RANDOM.VALUE(1,6))) ,sysdate, tmpNextSeq);
              END LOOP; --tmpDegNum
             END IF;
            END LOOP; -- st_cl
           
          END LOOP; --students
        
        END LOOP; --tmpnumsub
      END IF;
    END LOOP;
  END LOOP;
END;
/
EXEC INSERTDEPENDENCIES;

UPDATE GRADES gr SET gr.END_GRADE = ROUND((SELECT AVG(TO_NUMBER(pr.GRADE)) FROM PARTIAL_GRADES pr WHERE gr.ID_GRADE = pr.ID_GRADE),2);
